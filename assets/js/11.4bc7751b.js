(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{357:function(e,t,a){"use strict";a.r(t);var n=a(43),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"js专精-eventhub-ts实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js专精-eventhub-ts实现"}},[e._v("#")]),e._v(" JS专精-EventHub/ts实现")]),e._v(" "),a("h2",{attrs:{id:"发布订阅模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#发布订阅模式"}},[e._v("#")]),e._v(" 发布订阅模式")]),e._v(" "),a("p",[e._v("在发布订阅模式中，发布者和订阅者之间多了一个发布通道；一方面从发布者接收事件，另一方面向订阅者发布事件；订阅者需要从事件通道订阅事件。")]),e._v(" "),a("p",[e._v("订阅模式中，可以抽离出调度中心单独成一个文件，可以对一系列的订阅事件进行统一管理。")]),e._v(" "),a("h2",{attrs:{id:"常见的订阅和发布"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见的订阅和发布"}},[e._v("#")]),e._v(" 常见的订阅和发布")]),e._v(" "),a("p",[e._v("应用其实你已经使用过发布订阅模式了。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("document.body.addEventListener( 'click', function(){\n  console.log('clicked')\n}, false );\n\ndocument.body.click(); // 模拟用户点击\n")])])]),a("p",[a("strong",[e._v("监听就是订阅，点击就是发布")]),e._v("，点击body，body向订阅者发布被点击的消息就是发布，发布也可以理解为触发事件")]),e._v(" "),a("h2",{attrs:{id:"类比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类比"}},[e._v("#")]),e._v(" 类比")]),e._v(" "),a("p",[e._v("用户订阅了“xxx”日纸，当“xxx”日报发布时，把“xxx”日报送到用户手里。")]),e._v(" "),a("p",[e._v("事件是报纸，监听xxx事件就是“用户订阅xxx日报”，用户点击就是“xxx”日报发布，点击时触发的回调就是发布方送到用户手中。")]),e._v(" "),a("p",[e._v("我们可以推测出"),a("strong",[e._v("发布需要触发订阅传的回调函数")])]),e._v(" "),a("h2",{attrs:{id:"api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[e._v("#")]),e._v(" API")]),e._v(" "),a("ul",[a("li",[e._v("on-订阅（需要传入回调）")]),e._v(" "),a("li",[e._v("emit-发布（需要传入回调函数的参数）")]),e._v(" "),a("li",[e._v("off-取消订阅")])]),e._v(" "),a("h2",{attrs:{id:"typescript实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#typescript实现"}},[e._v("#")]),e._v(" TypeScript实现")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("class EventHub {\n  private cache: {[key:string]:Array<(...data) => void>} = {};\n  on(eventName: string, fn: (data: unknown)=>void) {\n    this.cache[eventName] = this.cache[eventName] || [];\n    this.cache[eventName].push(fn);\n  }\n  emit(eventName: string, ...data) {\n    (this.cache[eventName] || []).forEach(fn => {\n      fn(...data);\n    });\n  }\n  off(eventName: string, fn) {\n    this.cache[eventName] = this.cache[eventName] || [];\n    let index = undefined;\n    for (let i = 0; i < this.cache[eventName].length; i++) {\n      if (this.cache[eventName][i] === fn) {\n        index = i;\n        break;\n      }\n    }\n    if (index === undefined) {\n      return;\n    } else {\n      this.cache[eventName].splice(index, 1);\n    }\n  }\n}\n\nexport default EventHub;\n\n")])])]),a("ul",[a("li",[e._v("on 把回调 fn push到对应事件名的数组中")]),e._v(" "),a("li",[e._v("emit 调用对应事件名数组中的所有函数，并把emit的参数作为回调的参数")]),e._v(" "),a("li",[e._v("emit的两个作用：①触发xxx事件②通知订阅方（通过调用on的回调函数）")])]),e._v(" "),a("h2",{attrs:{id:"emit支持多参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#emit支持多参数"}},[e._v("#")]),e._v(" emit支持多参数")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("  emit(eventName: string, ...data) {\n    (this.cache[eventName] || []).forEach(fn => {\n      fn(...data);\n    });\n  }\n")])])]),a("p",[e._v("TS的小注意点"),a("code",[e._v("...data: number[]")]),e._v("实际上是给data加类型，...只是运算符")])])}),[],!1,null,null,null);t.default=s.exports}}]);