(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{361:function(t,a,n){"use strict";n.r(a);var e=n(43),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"js专精-柯里化-闭包隐藏变量的原因"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#js专精-柯里化-闭包隐藏变量的原因"}},[t._v("#")]),t._v(" JS专精-柯里化/闭包隐藏变量的原因")]),t._v(" "),n("h2",{attrs:{id:"什么是柯里化？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是柯里化？"}},[t._v("#")]),t._v(" 什么是柯里化？")]),t._v(" "),n("p",[t._v("柯里化其实是函数式编程的一个过程，在这个过程中我们能把一个带有多个参数的函数转换成一系列的嵌套函数。它返回一个新函数，这个新函数期望传入下一个参数。")]),t._v(" "),n("p",[t._v("它不断地返回新函数（像我们之前讲的，这个新函数期望当前的参数），直到所有的参数都被使用。参数会一直保持 alive（通过闭包），当柯里化函数链中最后一个函数被返回和调用的时候，它们会用于执行。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("function multiply(a, b, c) {\n    return a * b * c;\n}\nmultiply(1,2,3); \n")])])]),n("p",[t._v("柯里化：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("function multiply(a) {\n    return (b) => {\n        return (c) => {\n            return a * b * c\n        }\n    }\n}\nmultiply(1)(2)(3)\n")])])]),n("p",[t._v("JS没有尾递归优化，所以return之后之前压入的上下文并没有弹出，参数自然也不会死亡。")]),t._v(" "),n("h2",{attrs:{id:"闭包能够隐藏变量的原因"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#闭包能够隐藏变量的原因"}},[t._v("#")]),t._v(" 闭包能够隐藏变量的原因")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("function createA(){\n    let a = 1;\n    return ()=>{\n        a += 1;\n    }\n}\nlet myfunction = createA()\n")])])]),n("p",[t._v("只要里面的函数存在且使用了外部作用域的变量（该函数词法环境存在外部引用）那么外部作用域就不会消亡。")]),t._v(" "),n("p",[t._v("调用好createA之后，返回的函数记作fn使用了createA中的变量，fn的词法环境的外部引用导致了createA词法环境不消亡。之后"),n("strong",[t._v("更新全局上下文")]),t._v("，使得fn永远存在也使得被fn引用的变量a永远存在。")]),t._v(" "),n("p",[n("strong",[t._v("只要记住全局上下文始终存在就可以理解闭包的含义")]),t._v("，createA返回的函数更新了全局上下文，使的该函数和被该函数引用的外部变量始终存在")]),t._v(" "),n("h2",{attrs:{id:"通用的柯里化函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#通用的柯里化函数"}},[t._v("#")]),t._v(" 通用的柯里化函数")]),t._v(" "),n("p",[t._v("让我们开发一个函数，它能接受任何函数并返回一个柯里化版本的函数。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("let currify = (fn, params = []) => {\n  return arg => {\n    const params2 = params.concat(arg);\n    if (params2.length === fn.length) {\n      return fn(...params2);\n    } else {\n      return currify(fn, params2);\n    }\n  };\n};\nconst addTwo = function(a, b) {\n  return a + b;\n};\nlet newAddTwo = currify(addTwo);\nnewAddTwo(1)(2);\n")])])]),n("ul",[n("li",[t._v("currify返回一个函数f1赋值给一个变量")]),t._v(" "),n("li",[t._v("调用f1时我们传入一个参数赋值给形参arg")]),t._v(" "),n("li",[t._v("如果参数个数不一致继续返回函数我们继续传参")]),t._v(" "),n("li",[t._v("注意可以柯里化的函数形参一定是有限个(...arg)=>{arg.reduce((sum,n)=>{sum+n,0})}不可以柯里化，柯里化一定要知道函数什么时候结束。")])]),t._v(" "),n("h2",{attrs:{id:"tips"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#tips"}},[t._v("#")]),t._v(" tips")]),t._v(" "),n("ul",[n("li",[t._v("函数中 arguments.length 指的是实参的个数")]),t._v(" "),n("li",[t._v("函数的 length 指的是形参的个数")]),t._v(" "),n("li",[t._v("浏览器的 length 指浏览器页面和iframe的个数")])]),t._v(" "),n("h2",{attrs:{id:"柯里化作用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#柯里化作用"}},[t._v("#")]),t._v(" 柯里化作用")]),t._v(" "),n("p",[t._v("举个例子，你有一个商店 ，你想给你的顾客 10% 的折扣：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("function discount(price, discount) {\n    return price * discount\n}\nconst price = discount(500,0.10)\n")])])]),n("p",[t._v("虽然代码多了但是控制性更强了，逻辑更简单了")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("function discount(discount) {\n    return (price) => {\n        return price * discount;\n    }\n}\nconst tenPercentDiscount = discount(0.1);\ntenPercentDiscount(500); // $50\n")])])]),n("p",[t._v("tenPercentDiscount函数就是1折优惠函数")])])}),[],!1,null,null,null);a.default=r.exports}}]);